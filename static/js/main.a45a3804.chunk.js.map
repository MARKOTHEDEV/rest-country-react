{"version":3,"sources":["Component/nav/modeBtn.jsx","Component/nav/nav.jsx","Component/card-list/card.jsx","Component/searchLoader.gif","Component/preloader/Glasses.jsx","Component/card-list/card-list.jsx","Component/searchInput/search.jsx","Component/card-list/card-detail.jsx","App.js","index.js"],"names":["ModeBtn","props","localstoragetheme","lightMode","darkMode","localStorage","getItem","setItem","console","log","useState","theme","setTheme","useEffect","document","querySelector","setAttribute","id","onClick","e","includes","className","Nav","Card","data","to","alpha3Code","src","flag","name","population","region","capital","GlassesPreloader","Loader","alt","CardList","countriesData","style","position","length","map","Glasses","Search","type","placeholder","onChange","filterByCountries","target","value","defaultProps","CardDetail","useParams","history","useHistory","GetCountry","filter","country","Country","countries","push","nativeName","subregion","topLevelDomain","toString","currencies","languages","borders","Each_alpha3CodeForBorder","index","boredCountryObject","App","text","setState","searchResult","state","toLowerCase","filterByRegion","getListOfRegions","regions","Set","Array","from","search","url","a","fetch","resp","json","respData","this","getCountriesDataFromTheInternet","then","exact","path","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"gRA0EeA,EArED,SAACC,GAIX,IAAIC,EACAC,EAAY,aACZC,EAAW,YAGZC,aAAaC,QAAQ,gBACpBJ,EAAoBG,aAAaC,QAAQ,eAG1CJ,GAAqBC,GAAaD,GAAqBE,GACtDC,aAAaE,QAAQ,aAAaL,GAClCM,QAAQC,IAAIP,EAAkB,OAG9BG,aAAaE,QAAQ,aAAaJ,GAlBnB,MAuBKO,mBAASL,aAAaC,QAAQ,eAvBnC,mBAuBZK,EAvBY,KAuBNC,EAvBM,KA0BnBC,qBAAU,WAGQC,SAASC,cAAc,QAE7BC,aAAa,aAAaL,KAEpC,CAACA,IAkBH,OACI,qBAAKM,GAAG,WAAYC,QAAS,SAACC,GAf3BR,IAAUP,GACTQ,EAAST,GACbE,aAAaE,QAAQ,aAAaJ,IAGzBQ,IAAUR,IACfS,EAASR,GACbC,aAAaE,QAAQ,aAAaH,KAQlC,SAC+B,GAA9BO,EAAMS,SAAS,cAAsB,sBAAKC,UAAU,kBAAf,uBAGzB,mBAAGA,UAAU,mBAEd,sBAAKA,UAAU,YAAf,sBAGA,mBAAGA,UAAU,2BC7ClBC,EAlBJ,kBAGP,8BACQ,sBAAKD,UAAU,gBAAf,UACI,oDAIA,cAAC,EAAD,U,OCQDE,EAlBF,SAAC,GAAU,IAATC,EAAQ,EAARA,KAEX,OAEA,cAAC,IAAD,CAAMC,GAAID,EAAKE,WAAYL,UAAU,OAArC,SACI,gCACI,qBAAKM,IAAKH,EAAKI,OACf,sBAAKP,UAAU,eAAf,UACI,6BAAKG,EAAKK,OACV,8BAAG,gDAAH,IAAgCL,EAAKM,cACrC,8BAAG,4CAAH,KAA6BN,EAAKO,UAClC,8BAAG,6CAAH,KAA8BP,EAAKQ,oBCbpC,MAA0B,yCCc1BC,EAVS,kBAIpB,qBAAKZ,UAAU,UAAf,SACe,qBAAKM,IAAKO,EAAQC,IAAI,QCiB1BC,EAvBE,SAACnC,GAEd,OADAO,QAAQC,IAAIR,EAAMoC,gBAAkB,IAEhC,yBAAShB,UAAU,YAAYiB,MAAO,CAACC,SAAS,YAAhD,SAIsC,IAA/BtC,EAAMoC,cAAcG,OAErBvC,EAAMoC,cAAcI,KAAI,SAAAjB,GAElB,OACQ,cAAC,EAAD,CAAOA,KAAMA,GAAWA,EAAKE,eAEvC,cAACgB,EAAD,OCdZC,EAAO,SAAC1C,GAAD,OAET,uBAAO2C,KAAK,OAAOvB,UAAWpB,EAAMoB,UAAWwB,YAAa5C,EAAM4C,YAAaC,SAAU,SAAA3B,GAAC,OAAGlB,EAAM8C,kBAAkB5B,EAAE6B,OAAOC,WAKlIN,EAAOO,aAAa,CAChBL,YAAY,0BACZxB,UAAU,UAICsB,Q,OCqFAQ,EA3FG,SAAClD,GAAS,IACnByB,EAAe0B,cAAf1B,WACF2B,EAAUC,cACd9C,QAAQC,IAAIiB,GAEZ,IAAM6B,EAAW,SAAC/B,EAAKE,GAGpB,OAAOF,EAAKgC,QAAO,SAAAC,GAAO,OAAEA,EAAQ/B,WAAWN,SAASM,MAAa,IAQlEgC,EAAUH,EAAWtD,EAAM0D,UAAUjC,GAE7C,OADElB,QAAQC,IAAIiD,GAGX,qCACQ,yBAAQrC,UAAU,kBAAkBH,QAAS,WARrDmC,EAAQO,KAAK,MAQL,UACI,mBAAGvC,UAAU,sBADjB,aAKc,GAAzBpB,EAAM0D,UAAUnB,OAAa,cAACE,EAAD,IAElB,0BAASrB,UAAU,iBAAnB,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKM,IAAK+B,EAAQ9B,KAAMO,IAAI,mBAGhC,sBAAKd,UAAU,2BAAf,UACI,6BAAKqC,EAAQ7B,OACb,sBAAKR,UAAU,+BAAf,UACI,sBAAKA,UAAU,0CAAf,UACI,8BAAG,kDAAH,IAAkCqC,EAAQG,cAC1C,8BAAG,iDAA6BH,EAAQ5B,cACxC,8BAAG,6CAAH,IAA6B4B,EAAQ3B,UACrC,8BAAG,iDAA6B2B,EAAQI,aACxC,8BAAG,8CAA0BJ,EAAQ1B,cAGzC,sBAAKX,UAAU,0CAAf,UACI,8BAAG,uDAAmCqC,EAAQK,eAAe,GAAGC,cAChE,8BAAG,iDAA6BN,EAAQO,WAAWxB,KAAI,SAAAjB,GAAI,OAAEA,EAAKK,QAAMmC,WAAxE,OACA,8BAAG,gDAAH,IAAgCN,EAAQQ,UAAUzB,KAAI,SAAAjB,GAAI,OAAEA,EAAKK,QAAMmC,iBAG3E,sBAAK3C,UAAU,2BAAf,UAG2B,GAAzBqC,EAAQS,QAAQ3B,OAAY,oBAAGF,MAAO,CAAC,UAAY,UAAvB,UAAkC,iCAASoB,EAAQ7B,OAAnD,iBAA+E,gDAC5G,mDAID,kCASO6B,EAAQS,QAAQ1B,KAAI,SAAC2B,EAAyBC,GAC5C,IAAIC,EAAqBf,EAAWtD,EAAM0D,UAAUS,GAErD,OAAO,eAAC,IAAD,CAAM/C,UAAU,4BAA4BI,GAAE,WAAM6C,EAAmB5C,YAAvE,UAAkG4C,EAAmBzC,KAArH,MAA0FwC,WAKzG,oCC6CTE,E,kDAtHX,aAAc,IAAD,8BAET,gBAcNxB,kBAAkB,SAACyB,GAGjB,EAAKC,SAAS,CAACC,aAAa,EAAKC,MAAMhB,UAAUH,QAAO,SAAAnB,GAAa,OAAEA,EAAcR,KAAK+C,cAAcxD,SAASoD,EAAKI,qBAnBzG,EAsBfC,eAAe,SAACL,GAGb,EAAKC,SAAS,CAACC,aAAa,EAAKC,MAAMhB,UAAUH,QAAO,SAAAnB,GAAa,OAAEA,EAAcN,OAAO6C,cAAcxD,SAASoD,EAAKI,qBAzB5G,EAyDfE,iBAAkB,WAEd,IAAMC,EAAW,IAAIC,IAAI,EAAKL,MAAMhB,UAAUlB,KAAI,SAAAjB,GAAI,OAAEA,EAAKO,WAE7D,OAAQkD,MAAMC,KAAKH,GAAStC,KAAI,SAACjB,EAAK6C,GAAN,OAAc,wBAAQpB,MAAOzB,EAAf,SAAkCA,GAAR6C,OAzDtE,EAAKM,MAAM,CACPhB,UAAU,GACVe,aAAa,GACbS,OAAO,IAPF,E,0GA2Bf,WAAsCC,GAAtC,iBAAAC,EAAA,sEAEsBC,MAAMF,GAF5B,cAESG,EAFT,gBAGyBA,EAAKC,OAH9B,cAGSC,EAHT,yBAIUA,GAJV,2C,sFAMA,WAAoB,IAAD,OAEhBC,KAAKC,gCAAgC,wCAOjCC,MAAK,SAAAvD,GAEF,EAAKoC,SAAS,CAACd,UAAU,YAAItB,GAAeI,KAAI,SAACjB,EAAK6C,GAE9C,OAAO,2BAAI7C,GAAX,IAAgBP,GAAGoD,SAG3B,EAAKI,SAAS,CAACC,aAAa,YAAI,EAAKC,MAAMhB,kB,oBAenD,WAAS,IAAD,OAGN,OAIE,mCACA,cAAC,IAAD,UACE,sBAAKtC,UAAU,YAAf,UAEQ,cAAC,EAAD,IAIF,sBAAMA,UAAU,oBAAhB,SACG,eAAC,IAAD,WACG,eAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,IAAlB,UACI,0BAASzE,UAAU,YAAnB,UAEM,cAAC,EAAD,CAAUwB,YAAa,0BAA2BE,kBAAmB2C,KAAK3C,oBAE1E,sBAAK1B,UAAU,eAAf,UACI,yBAAQyB,SAAU,SAAA3B,GAAC,OAAG,EAAK0D,eAAe1D,EAAE6B,OAAOC,QAAnD,UACI,wBAAQA,MAAM,GAAd,8BAECyC,KAAKZ,sBAGV,mBAAGzD,UAAU,uCAIrB,uBAAM,uBAEN,cAAC,EAAD,CAAUgB,cAAeqD,KAAKf,MAAMD,kBAG1C,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,eAAlB,SACM,cAAC,EAAD,CAAanC,UAAW+B,KAAKf,MAAMhB,8B,GA1G7CoC,a,MCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpF,SAASqF,eAAe,W","file":"static/js/main.a45a3804.chunk.js","sourcesContent":["import { useState,useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst ModeBtn=(props)=>{\r\n    // this component handles all the Dark and Light Mode Jazz\r\n    \r\n    \r\n    let localstoragetheme;\r\n    let lightMode = 'light-mode'\r\n    let darkMode = 'dark-mode'\r\n\r\n    // if there something in the local storage named theme-mode get the theme-mode\r\n    if(localStorage.getItem('theme-mode')){\r\n        localstoragetheme = localStorage.getItem('theme-mode')\r\n    }\r\n    \r\n    if(localstoragetheme == lightMode || localstoragetheme == darkMode){\r\n        localStorage.setItem('theme-mode',localstoragetheme)\r\n        console.log(localstoragetheme,'lo')\r\n        \r\n    }else{\r\n        localStorage.setItem('theme-mode',lightMode)\r\n        \r\n    }\r\n\r\n    // what ever the mode is set it to the State Below\r\n    const [theme,setTheme] =useState(localStorage.getItem(\"theme-mode\"));\r\n\r\n    \r\n    useEffect(()=>{\r\n        // Only if the \"theme\"State changes that when the useEffect runs\r\n        // The above comment means when the user click on the component the \"theme\"State updates and we change the html Attribute \r\n        let htmlTag = document.querySelector('html');\r\n       \r\n        htmlTag.setAttribute('theme-mode',theme)\r\n\r\n    },[theme])\r\n\r\n    const ToggleThemeMode=(e)=>{\r\n       \r\n        if(theme === darkMode){\r\n            setTheme(lightMode)\r\n        localStorage.setItem('theme-mode',lightMode)\r\n\r\n        }\r\n        else if (theme === lightMode){\r\n            setTheme(darkMode)\r\n        localStorage.setItem('theme-mode',darkMode)\r\n\r\n            \r\n        }\r\n    }\r\n  \r\n  \r\n    return(\r\n        <div id=\"mode_btn\"  onClick={(e)=> ToggleThemeMode(e)}>\r\n        {theme.includes('light-mode')==true?( <div className=\"light_mode icon\">\r\n                     Light Mode\r\n                 \r\n                     <i className=\"fas  fa-sun\"></i>    \r\n                 </div>):(\r\n                    <div className=\"dark_mode\">\r\n            \r\n                    Dark Mode\r\n                    <i className=\"far icon fa-moon\"></i>    \r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ModeBtn","import ModeBtn from './modeBtn'\r\n\r\n\r\nconst Nav =()=>(\r\n\r\n    \r\n    <nav>\r\n            <div className=\"nav_container\">\r\n                <h2>Where in the world</h2>\r\n\r\n\r\n            {/* start of modeBtn component */}\r\n                <ModeBtn  />\r\n            {/* end of modeBtn component */}\r\n            \r\n            </div>\r\n    </nav>\r\n)\r\n\r\n\r\n\r\nexport default Nav","import { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({data})=>{\r\n    \r\n    return(\r\n    \r\n    <Link to={data.alpha3Code} className=\"card\" >\r\n        <div >\r\n            <img src={data.flag} />\r\n            <div className=\"card_content\">\r\n                <h2>{data.name}</h2>\r\n                <p><strong>Population</strong>:{data.population}</p>\r\n                <p><strong>Region</strong>: {data.region}</p>\r\n                <p><strong>Capital</strong>: {data.capital}</p>\r\n            </div>\r\n        </div>\r\n    </Link>)\r\n}\r\n\r\n\r\nexport default Card","export default __webpack_public_path__ + \"static/media/searchLoader.8ae90ca9.gif\";","import Loader from '../searchLoader.gif'\r\n\r\n\r\n\r\nconst GlassesPreloader =()=>(\r\n\r\n\r\n\r\n    <div className=\"Loading\">\r\n                   <img src={Loader} alt=\"\" />\r\n    </div>\r\n)\r\n\r\n\r\nexport default GlassesPreloader","import Card from './card'\r\nimport GlassesPreloader from '../preloader/Glasses'\r\n\r\nconst CardList = (props)=>{\r\n    console.log(props.countriesData === [])\r\n    return (\r\n        <section className=\"section_b\" style={{position:'relative'}}>\r\n            {/* <!-- secttion b consist of a list of countries --> */}\r\n\r\n           {\r\n               props.countriesData.length !== 0?\r\n            \r\n              props.countriesData.map(data=>{\r\n\r\n                    return (\r\n                            <Card  data={data} key={data.alpha3Code} />\r\n                    )\r\n               }):<GlassesPreloader/>\r\n           }\r\n\r\n\r\n        \r\n    </section>\r\n    )\r\n}\r\n\r\nexport default CardList","\r\n\r\n\r\nconst Search=(props)=>(\r\n\r\n    <input type=\"text\" className={props.className} placeholder={props.placeholder} onChange={e=> props.filterByCountries(e.target.value)} />\r\n\r\n)\r\n\r\n\r\nSearch.defaultProps={\r\n    placeholder:\"Search for a country...\",\r\n    className:\"search\"\r\n}\r\n\r\n\r\nexport default Search","import { useState,useEffect } from \"react\";\r\nimport { useParams,useHistory,Link } from  'react-router-dom'\r\nimport GlassesPreloader from '../preloader/Glasses'\r\n\r\n/*\r\nso to acces a card detail you need a link  that has a argument called alpha3Code they are short unquie code each Card Has\r\nwhen we click on a card we use the alpha3Code to genrate the Card detail Content\r\n\r\n*/\r\n\r\nconst CardDetail =(props)=>{\r\n   let { alpha3Code } = useParams();\r\n   let history = useHistory()\r\n   console.log(alpha3Code)\r\n\r\n   const GetCountry=(data,alpha3Code)=>{\r\n      //GetCountry get a single Country according to the alphaCode\r\n\r\n      return data.filter(country=>country.alpha3Code.includes(alpha3Code))[0]\r\n   }\r\n\r\n\r\n   const handleGoingBackToMainPage = ()=>{\r\n    history.push('/')\r\n   }\r\n\r\n   const Country = GetCountry(props.countries,alpha3Code)\r\n   console.log(Country)\r\n return (\r\n\r\n    <>\r\n            <button className=\"btn back_button\" onClick={()=>handleGoingBackToMainPage()}>\r\n                <i className=\"fas fa-arrow-left\"></i>\r\n                Go Back\r\n            </button>\r\n\r\n{props.countries.length ==0 ? <GlassesPreloader /> :\r\n\r\n            <section className=\"detail_section\">\r\n                <div className=\"detail_section__image\">\r\n                    <img src={Country.flag} alt=\"country pics\" />\r\n                </div>\r\n             \r\n                <div className=\"detail_content_container\">\r\n                    <h2>{Country.name}</h2>\r\n                    <div className=\"detail_section__country_info\">\r\n                        <div className=\"detail_section__country_info__section_a\">\r\n                            <p><strong>Native Name:</strong> {Country.nativeName}</p>\r\n                            <p><strong>Population:</strong>{Country.population}</p>\r\n                            <p><strong>Region:</strong> {Country.region}</p>\r\n                            <p><strong>Sub Region:</strong>{Country.subregion}</p>\r\n                            <p><strong>Capital:</strong>{Country.capital}</p>\r\n                        </div>\r\n\r\n                        <div className=\"detail_section__country_info__section_b\">\r\n                            <p><strong>Top Level Domain:</strong>{Country.topLevelDomain[0].toString()}</p>\r\n                            <p><strong>Currencies:</strong>{Country.currencies.map(data=>data.name).toString()} </p>\r\n                            <p><strong>Languages:</strong> {Country.languages.map(data=>data.name).toString()}</p>\r\n                        </div>\r\n\r\n                        <div className=\"border_countries_section\">\r\n                            \r\n                        {/* //    if this country Doesnt have Border Just Display a message */}\r\n                        { Country.borders.length ==0 ?<p style={{'textAlign':'center'}}><strong>{Country.name}</strong> Doesn't Have <strong>Border!</strong></p>:\r\n                         <h4>Border Countries:</h4>\r\n                        }\r\n                           \r\n\r\n                        <section>\r\n                            \r\n                           {   \r\n\r\n                        \r\n                            // Basically we just map Through the Array Of Borders\r\n\r\n                                // Now We Want to get the Current Country Borders Which is an array of\r\n                                // different Country Each_alpha3Code\r\n                               Country.borders.map((Each_alpha3CodeForBorder,index)=>{\r\n                                 let boredCountryObject=  GetCountry(props.countries,Each_alpha3CodeForBorder)\r\n                              \r\n                                return <Link className=\"btn border_countries__btn\" to={`/${boredCountryObject.alpha3Code}`} key={index}>{boredCountryObject.name} </ Link>\r\n                              })\r\n                           }\r\n                        </section>\r\n                        </div>\r\n                        <br />\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n            </section>\r\n\r\n}\r\n\r\n    </>\r\n )\r\n\r\n}\r\n\r\n\r\n\r\nexport default CardDetail","import { Component } from 'react'\nimport Nav from './Component/nav/nav'\nimport CardList from './Component/card-list/card-list'\nimport Search from './Component/searchInput/search'\nimport CardDetail from './Component/card-list/card-detail'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// alpha3Code\n\nclass App extends Component{\n\n\n    constructor(){\n      // here we are Extending all the Methods and Properties of Component to App\n        super()\n\n        this.state={\n            countries:[],\n            searchResult:[],\n            search:'',\n        }\n    }\n\n    \n    \n   \n       \n\n  filterByCountries=(text)=>{\n    // this updates the searchResult State it activated by the search Bar\n     \n    this.setState({searchResult:this.state.countries.filter(countriesData=>countriesData.name.toLowerCase().includes(text.toLowerCase()))}) \n  }\n\n  filterByRegion=(text)=>{\n    // this updates the searchResult State it activated by the search Bar\n \n     this.setState({searchResult:this.state.countries.filter(countriesData=>countriesData.region.toLowerCase().includes(text.toLowerCase()))}) \n  }\n  async getCountriesDataFromTheInternet(url){\n    // this is a async funtion that gets all the Data From The Rest Country End Point\n     const resp = await fetch(url)\n     const respData =await resp.json() \n     return respData\n  }\n  componentDidMount(){\n\n     this.getCountriesDataFromTheInternet('https://restcountries.eu/rest/v2/all')\n     /* \n        The Following Code Gets the country Data From the Endpoint all we do is Store the data in the State\n\n        the first state i use it for a store House Of All the Data\n        the Other One Is the Filter Version which is The Search Result -- Initially it will be filled with search data\n     */\n        .then(countriesData=>{\n            // yall already Know what   componentDidMount does am using it behavious to fetch and store the data\n            this.setState({countries:[...countriesData].map((data,index)=>{\n                //    \n                    return {...data,id:index}\n                })}) \n                \n            this.setState({searchResult:[...this.state.countries]})\n\n        })\n    \n\n\n  }\n  \n  getListOfRegions =()=>{\n      //   this method returns the regions and remove duplicates from it\n      const regions =  new Set(this.state.countries.map(data=>data.region))\n      // console.log(regions)\n      return  Array.from(regions).map((data,index)=><option value={data} key={index}>{data}</option>)\n    }\n\n    render(){\n        \n\n      return (\n\n\n\n        <>\n        <Router>\n          <div className=\"container\" >\n            {/* nav component starts */}\n                  <Nav />\n            {/* nav component end */}\n         \n\n                <main className=\"main_content_area\">\n                   <Switch>\n                      <Route exact path='/'>\n                          <section className=\"section_a\">\n                                {/* <!-- section a consisit of the search bar and the select Button --> */}\n                                <Search   placeholder={\"Search for a country...\"} filterByCountries={this.filterByCountries}/>\n                              \n                                <div className=\"myselect_box\">\n                                    <select onChange={e=> this.filterByRegion(e.target.value)}>\n                                        <option value=\"\">Filter by Region</option>\n                                        {/* the function below gets all the regions*/}\n                                        {this.getListOfRegions()}\n                                    </select>\n                                    {/* <!-- <div className=\"arrow_down\"></div> --> */}\n                                    <i className=\"fas fa-caret-down arrow_down\"></i>\n                                </div>\n                            \n                            </section>\n                            <br /><br />\n                            {/* {this.state.searchResult ===[] ?<p>dkdk</p>:<h1 style={{\"text-align\":\"center\"}} className=\"text\">Please use the Filter by Region or search Box to Find More Targeted Results</h1>}*/}\n                            <CardList countriesData={this.state.searchResult}/>                  \n                      </Route>  \n                  \n                      <Route exact path=\"/:alpha3Code\">\n                            <CardDetail  countries={this.state.countries}/>\n                      </Route>\n                    </Switch>\n               \n                </main>\n            </div>\n        </Router>\n        </>\n      )\n    }\n\n\n  }\n\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}